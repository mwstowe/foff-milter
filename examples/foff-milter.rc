#!/bin/sh

# PROVIDE: foff_milter
# REQUIRE: DAEMON NETWORKING
# BEFORE: mail
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable foff-milter:
# foff_milter_enable="YES"
# foff_milter_config="/usr/local/etc/foff-milter.yaml"

. /etc/rc.subr

name="foff_milter"
rcvar="foff_milter_enable"

load_rc_config $name

: ${foff_milter_enable:="NO"}
: ${foff_milter_config:="/usr/local/etc/foff-milter.yaml"}
: ${foff_milter_user:="root"}
: ${foff_milter_group:="wheel"}
: ${foff_milter_pidfile:="/var/run/foff-milter.pid"}
: ${foff_milter_socket:="/var/run/foff-milter.sock"}

pidfile="${foff_milter_pidfile}"

# Use FreeBSD's daemon(8) to properly daemonize the process
command="/usr/sbin/daemon"
command_args="-f -p ${pidfile} /usr/local/bin/foff-milter -c ${foff_milter_config}"

start_precmd="foff_milter_prestart"
stop_cmd="foff_milter_stop"
status_cmd="foff_milter_status"
restart_cmd="foff_milter_restart"

foff_milter_prestart()
{
    # Check if already running by checking both PID file and actual process
    if [ -f "${pidfile}" ]; then
        local pid=$(cat "${pidfile}" 2>/dev/null)
        if [ -n "${pid}" ] && kill -0 "${pid}" 2>/dev/null; then
            echo "${name} is already running as pid ${pid}"
            return 1
        else
            echo "Removing stale PID file"
            rm -f "${pidfile}"
        fi
    fi
    
    # Check for any existing foff-milter processes
    local existing_pids=$(pgrep -f "foff-milter" | grep -v $$ | head -5)
    if [ -n "${existing_pids}" ]; then
        echo "${name} processes found: ${existing_pids}"
        echo "Killing existing processes..."
        echo "${existing_pids}" | xargs kill 2>/dev/null || true
        sleep 2
        # Force kill if still running
        existing_pids=$(pgrep -f "foff-milter" | grep -v $$ | head -5)
        if [ -n "${existing_pids}" ]; then
            echo "${existing_pids}" | xargs kill -9 2>/dev/null || true
            sleep 1
        fi
    fi
    
    # Ensure the socket directory exists
    if [ ! -d "/var/run" ]; then
        mkdir -p /var/run
    fi
    
    # Remove stale socket if it exists
    if [ -S "${foff_milter_socket}" ]; then
        echo "Removing stale socket file"
        rm -f "${foff_milter_socket}"
    fi
    
    # Test configuration
    echo "Testing configuration..."
    if ! /usr/local/bin/foff-milter --test-config -c ${foff_milter_config}; then
        echo "Configuration test failed"
        return 1
    fi
    
    echo "Starting ${name}..."
}

foff_milter_stop()
{
    local pid
    
    # Try to get PID from file first
    if [ -f "${pidfile}" ]; then
        pid=$(cat "${pidfile}" 2>/dev/null)
        if [ -n "${pid}" ] && kill -0 "${pid}" 2>/dev/null; then
            echo "Stopping ${name} (PID: ${pid})"
            kill "${pid}" 2>/dev/null || true
            
            # Wait for graceful shutdown
            local count=0
            while [ $count -lt 10 ] && kill -0 "${pid}" 2>/dev/null; do
                sleep 1
                count=$((count + 1))
            done
            
            # Force kill if still running
            if kill -0 "${pid}" 2>/dev/null; then
                echo "Force killing ${name}"
                kill -9 "${pid}" 2>/dev/null || true
            fi
        fi
        rm -f "${pidfile}"
    fi
    
    # Clean up any remaining foff-milter processes
    local remaining_pids=$(pgrep -f "foff-milter" | grep -v $$ 2>/dev/null || true)
    if [ -n "${remaining_pids}" ]; then
        echo "Cleaning up remaining processes: ${remaining_pids}"
        echo "${remaining_pids}" | xargs kill 2>/dev/null || true
        sleep 1
        # Force kill any stubborn processes
        remaining_pids=$(pgrep -f "foff-milter" | grep -v $$ 2>/dev/null || true)
        if [ -n "${remaining_pids}" ]; then
            echo "${remaining_pids}" | xargs kill -9 2>/dev/null || true
        fi
    fi
    
    # Clean up socket file
    if [ -S "${foff_milter_socket}" ]; then
        rm -f "${foff_milter_socket}"
        echo "Removed socket file"
    fi
    
    echo "${name} stopped"
}

foff_milter_status()
{
    if [ -f "${pidfile}" ]; then
        local pid=$(cat "${pidfile}" 2>/dev/null)
        if [ -n "${pid}" ] && kill -0 "${pid}" 2>/dev/null; then
            echo "${name} is running as pid ${pid}."
            if [ -S "${foff_milter_socket}" ]; then
                echo "Socket ${foff_milter_socket} exists."
                ls -la "${foff_milter_socket}"
            else
                echo "Warning: Socket ${foff_milter_socket} does not exist."
            fi
            return 0
        else
            echo "${name} is not running (stale PID file)."
            return 1
        fi
    else
        # Check for running processes without PID file
        local existing_pids=$(pgrep -f "foff-milter" | grep -v $$ | head -1)
        if [ -n "${existing_pids}" ]; then
            echo "${name} is running as pid ${existing_pids} (no PID file)."
            return 0
        else
            echo "${name} is not running."
            return 1
        fi
    fi
}

foff_milter_restart()
{
    foff_milter_stop
    sleep 2
    run_rc_command "start"
}

run_rc_command "$1"
