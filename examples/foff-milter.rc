#!/bin/sh

# PROVIDE: foff_milter
# REQUIRE: DAEMON NETWORKING
# BEFORE: mail
# KEYWORD: shutdown

# Add the following lines to /etc/rc.conf to enable foff-milter:
# foff_milter_enable="YES"
# foff_milter_config="/usr/local/etc/foff-milter.yaml"

. /etc/rc.subr

name="foff_milter"
rcvar="foff_milter_enable"

load_rc_config $name

: ${foff_milter_enable:="NO"}
: ${foff_milter_config:="/usr/local/etc/foff-milter.yaml"}
: ${foff_milter_user:="root"}
: ${foff_milter_group:="wheel"}

# Use daemon(8) to manage the process - it handles PID file creation
command="/usr/sbin/daemon"
command_args="-f -p /var/run/foff-milter.pid /usr/local/bin/foff-milter -c ${foff_milter_config}"
pidfile="/var/run/foff-milter.pid"

start_precmd="foff_milter_prestart"
stop_postcmd="foff_milter_poststop"

foff_milter_prestart()
{
    # Ensure the socket directory exists
    if [ ! -d "/var/run" ]; then
        mkdir -p /var/run
    fi
    
    # Remove stale socket if it exists
    if [ -S "/var/run/foff-milter.sock" ]; then
        rm -f /var/run/foff-milter.sock
    fi
    
    # Remove stale PID file if it exists
    if [ -f "${pidfile}" ]; then
        rm -f "${pidfile}"
    fi
    
    # Test configuration
    if ! /usr/local/bin/foff-milter --test-config -c ${foff_milter_config}; then
        echo "Configuration test failed"
        return 1
    fi
    
    echo "Starting ${name} with PID file management..."
}

foff_milter_poststop()
{
    # Clean up socket file
    if [ -S "/var/run/foff-milter.sock" ]; then
        rm -f /var/run/foff-milter.sock
        echo "Removed socket file"
    fi
    
    # Clean up PID file (daemon(8) should handle this, but just in case)
    if [ -f "${pidfile}" ]; then
        rm -f "${pidfile}"
        echo "Removed PID file"
    fi
}

run_rc_command "$1"
